/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: UserInformation.proto */

#ifndef PROTOBUF_C_UserInformation_2eproto__INCLUDED
#define PROTOBUF_C_UserInformation_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _UserInformation UserInformation;


/* --- enums --- */

typedef enum _UserStatus {
  USER_STATUS__UNKNOWN = 0,
  USER_STATUS__IDLE = 1,
  USER_STATUS__BUSY = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(USER_STATUS)
} UserStatus;

/* --- messages --- */

struct  _UserInformation
{
  ProtobufCMessage base;
  char *name;
  uint32_t age;
  char *phone;
  UserStatus stat;
  char *email;
};
#define USER_INFORMATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&user_information__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, USER_STATUS__UNKNOWN, (char *)protobuf_c_empty_string }


/* UserInformation methods */
void   user_information__init
                     (UserInformation         *message);
size_t user_information__get_packed_size
                     (const UserInformation   *message);
size_t user_information__pack
                     (const UserInformation   *message,
                      uint8_t             *out);
size_t user_information__pack_to_buffer
                     (const UserInformation   *message,
                      ProtobufCBuffer     *buffer);
UserInformation *
       user_information__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   user_information__free_unpacked
                     (UserInformation *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UserInformation_Closure)
                 (const UserInformation *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    user_status__descriptor;
extern const ProtobufCMessageDescriptor user_information__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_UserInformation_2eproto__INCLUDED */
